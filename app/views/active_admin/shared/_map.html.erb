<% editable ||= false %>
<script type="text/javascript" src='http://maps.google.com/maps/api/js?sensor=true'></script>
<script type="text/javascript" src='http://google-maps-utility-library-v3.googlecode.com/svn/tags/markerclusterer/1.0/src/markerclusterer_compiled.js'></script>

<div class="map_container">
  <div id="map" class="gmaps4rails_map"></div>
</div>

<script type="text/javascript" charset="utf-8">
 Gmaps.map = new Gmaps4RailsGoogle();
  Gmaps.load_map = function() {
      Gmaps.map.map_options.auto_zoom = false;
      Gmaps.map.map_options.zoom = 16;
      Gmaps.map.initialize();
      Gmaps.map.markers = <%= raw event.to_gmaps4rails %>;
      Gmaps.map.create_markers();
      Gmaps.map.adjustMapToBounds();
      Gmaps.map.callback();
  };

  <% if editable %>

  var markersArray = [];
  // On click, clear markers, place a new one, update coordinates in the form
  Gmaps.map.callback = function() {
      google.maps.event.addListener(Gmaps.map.serviceObject, 'click', function(event) {
        clearOverlays();
        placeMarker(event.latLng);
        updateFormLocation(event.latLng);
      });
  };
  // Update form attributes with given coordinates
  function updateFormLocation(latLng) {
      $('#event_latitude').val(latLng.lat());
      $('#event_longitude').val(latLng.lng());
      //$('#location_attributes_gmaps_zoom').val(Gmaps.map.serviceObject.getZoom());
  }
  // Add a marker with an open infowindow
  function placeMarker(latLng) {
      var marker = new google.maps.Marker({
          position: latLng, 
          map: Gmaps.map.serviceObject,
          draggable: true
      });
      markersArray.push(marker);
      // Set and open infowindow
      var infowindow = new google.maps.InfoWindow({
          content: '<div class="popup"><h2>Awesome!</h2><p>Drag me around to set the location</p>'
      });
      infowindow.open(Gmaps.map.serviceObject,marker);
      // Listen to drag & drop
      google.maps.event.addListener(marker, 'dragend', function() {
          updateFormLocation(this.getPosition());
      });
  }
  // Removes the overlays from the map
  function clearOverlays() {
    Gmaps.map.markers[0].serviceObject.setMap(null);
    if (markersArray) {
      for (var i = 0; i < markersArray.length; i++ ) {
        markersArray[i].serviceObject.setMap(null);
      }
    }
    markersArray.length = 0;
  }
  <% end -%>

  Gmaps.loadMaps();
</script>